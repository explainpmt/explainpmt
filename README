= eXPlain Project Management Tool

eXPlain Project Management Tool (or simply eXPlainPMT) is a web-based
application that supports the eXtreme Programming development methodology
(http://www.extremeprogramming.org). Although traditional XP advocates the use
of ordinary index cards to keep track of development requirements (story cards),
this practice is sometimes impossible or undesirable. It's a practice that
doesn't work well with geographically distributed teams, or developers with
sloppy handwriting and/or cluttered desks (I certainly fall in the latter
category ;-) ).

eXPlainPMT allows story cards to be filed via the web based interface and made
accessible to the entire project team. It also allows the status of the stories
to be tracked and for the stories to be planned in an ongoing iterative process.
The goal of the product is to support the methodology while staying out of the
way as much as possible, so you'll find that there are few access restrictions
or permissions settings. Just like with note cards, restrictions on who can
view/alter the story cards are left to the consensus of the team.

== License

eXPlainPMT is released under the GNU Public License (GPL). A copy of this
license can be found in the file LICENSE in the application's root directory.

== Requirements

* Ruby 1.8.2 or better
* MySQL, PostgreSQL or SQLite and the Ruby drivers for whichever database you
  plan to use.
* Redcloth Version 3.0.4 or higher (gem install redcloth)

== Installation

1. If you haven't done so already, unpack the application tarball and
   move/rename the directory as you wish.

2. Create a database for the application, and grant all rights to the username
   that the application should use when accessing the database. (Skip this step
   if using SQLite.)

3. Edit config/database.yml- only the production setting is required unless you
   wish to run the test suite and/or work in the development environment. Use
   the database and username from step 2.

4. Run 'RAILS_ENV=production rake migrate' to create the necessary
   database tables.

5. If this is a new installation, the previous step will also create a default
   admin account for your first login. The username and password are both
   'admin'. (It is highly recommended that you only use this account to log in
   for the first time. You should then create a new admin user account for
   yourself, log out, log in with the new account and delete the default admin
   account.)

6. Either run the mongrel server -- "./script/server -e production" -- or set up
   Apache or lighttpd as directed in the documentation for the Rails framework.

7. Load up the application in your browser, log in, and enjoy!